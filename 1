Листинг А.1 Определение типа и действий обработки
Функция СведенияОВнешнейОбработке() Экспорт

    ПараметрыРегистрации = Новый Структура;
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
    ПараметрыРегистрации.Вставить("Наименование", "Формирование МХ-1 и МХ-3");
    ПараметрыРегистрации.Вставить("Версия", "1.0");
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
    ПараметрыРегистрации.Вставить("Информация", ""); 
    ТаблицаКоманд = ПолучитьТаблицуКоманд();

    ДобавитьКоманду(ТаблицаКоманд,"Формирование МХ-1 и МХ-3" ,
								  "ФормыМХ", 
								  "ОткрытиеФормы",
								  Истина,
								  "ПечатьMXL");
  
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

    Возврат ПараметрыРегистрации;

КонецФункции // СведенияОВнешнейОбработке()

Функция ПолучитьТаблицуКоманд()
  Команды = Новый ТаблицаЗначений;
  Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
  Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
  Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры


Листинг А.2 Экспортная процедура печати отчета МХ-1
Процедура ПечатьМХ1(ТабДок,Данные) Экспорт	
	Макет = ЭтотОбъект.ПолучитьМакет("МХ1"); 	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.СтруктурноеПодразделение = СтруктурноеПодразделение;
	Шапка.Параметры.НомерДокумента = Номер;
	Шапка.Параметры.ДатаСоставления = Формат(ДатаСоставления,"ДЛФ=Д");
	Шапка.Параметры.ОрганизацияПредставление = ОрганизацияХранительПредставление;
	Шапка.Параметры.ПоклажедержательПредставление = ПоклажедержательПредставление;
	Шапка.Параметры.ФИОПоклажедержателя = ФИО_Поклажедержателя;	
	Шапка.Параметры.ОКУД = ФормаПоОКУД;
	Шапка.Параметры.ОКПОорганизации = ОКПО_Организации;
	Шапка.Параметры.ОКДП = ОКДП;
	Шапка.Параметры.ОКПОпоклажедержателя = ОКПО_Поклажедержателя;
	Шапка.Параметры.ВидОперации = Данные.Получить(1);
	
	Шапка.Параметры.НомерДоговора = Данные.Получить(3);
	Шапка.Параметры.ДатаДоговора = Формат(Данные.Получить(2),"ДЛФ=Д");
	Шапка.Параметры.ПолноеНаименование = Данные.Получить(6);
	Шапка.Параметры.СрокХранения = Данные.Получить(9);
	ТабДок.Вывести(Шапка);
	Строка = Макет.ПолучитьОбласть("Строка");
	
	Стоимость = 0;
	Количество = 0;
	Для Каждого Стр Из РасшифровкаРеализаций Цикл
		Строка.Параметры.НомерСтр = Стр.НомерСтроки;
		Строка.Параметры.Наименование = Стр.Наименование;
		Строка.Параметры.Код = Стр.Код;
		Строка.Параметры.ЕдИзм = "тн";
		Строка.Параметры.Количество = Стр.Количество/1000; 
		Количество = Количество+Стр.Количество/1000;
		Строка.Параметры.Цена = Стр.Цена;
		Строка.Параметры.Стоимость = Стр.Стоимость;
		Строка.Параметры.Характеристика = Стр.Характеристика;
		Строка.Параметры.КодПоОКЕИ = Стр.КодПоОКЕИ;
		
		Стоимость = Стоимость + Стр.Стоимость;
		ТабДок.Вывести(Строка);
	КонецЦикла;
		
	
	 //Подвал
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.СтоимостьИтог = Стоимость;	
	Подвал.Параметры.КоличествоИтог = Количество;
	Подвал.Параметры.УсловияХранения = Данные.Получить(10);
	
	Подвал.Параметры.СдалДолжность = Данные.Получить(7);
	Подвал.Параметры.СдалРасшифровка = Данные.Получить(8);
	Подвал.Параметры.ПринялДолжность = Данные.Получить(4);
	Подвал.Параметры.ПринялРасшифровка = Данные.Получить(5);
	ТабДок.Вывести(Подвал);

	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
КонецПроцедуры

Листинг А.3 Экспортная процедура печати отчета МХ-3
Процедура ПечатьМХ3(ТабДок,Данные,ДатаС,ДатаПо,ПоДокументам) Экспорт	
	Макет = ЭтотОбъект.ПолучитьМакет("МХ3"); 	
	Шапка = Макет.ПолучитьОбласть("Шапка1");
	Шапка.Параметры.СтруктурноеПодразделение = СтруктурноеПодразделение;
	Шапка.Параметры.НомерДокумента = Номер;
	Шапка.Параметры.ДатаСоставления = Формат(ДатаСоставления,"ДЛФ=Д");
	Шапка.Параметры.ОрганизацияПредставление = ОрганизацияХранительПредставление;
	Шапка.Параметры.ПоклажедержательПредставление = ПоклажедержательПредставление;
	Шапка.Параметры.ФИОПоклажедержателя = ФИО_Поклажедержателя;	
	Шапка.Параметры.ОКУД = ФормаПоОКУД;
	Шапка.Параметры.ОКПОорганизации = ОКПО_Организации;
	Шапка.Параметры.ОКДП = ОКДП;
	Шапка.Параметры.ОКПОпоклажедержателя = ОКПО_Поклажедержателя;       
	Шапка.Параметры.ВидОперации = Данные.Получить(1);
	
	Шапка.Параметры.НомерДоговора = Данные.Получить(3);
	Шапка.Параметры.ДатаДоговора = Формат(Данные.Получить(2),"ДЛФ=Д");
	
	ТабДок.Вывести(Шапка);
		
	Строка = Макет.ПолучитьОбласть("Строка1");
	
	Стоимость = 0;
	Количество = 0;
	Сумма1 = 0;
	Сумма2 = 0;
	ТаблицаПередачиТоваров.Сортировать("Наименование возр, Примечание убыв");
	Для Каждого Стр Из ТаблицаПередачиТоваров Цикл
		Строка.Параметры.НомерСтр = Стр.НомерСтроки;
		Строка.Параметры.Наименование = Стр.Наименование;
		Строка.Параметры.Код = Стр.Код;
		Строка.Параметры.ЕдИзм = "тн";
		Строка.Параметры.Количество = Стр.Количество/1000; 
		Количество = Количество + Стр.Количество/1000;
		Строка.Параметры.Цена = Стр.Цена;
		Строка.Параметры.Стоимость = Стр.Цена * Стр.Количество;
		Строка.Параметры.Характеристика = Стр.Характеристика;
		Строка.Параметры.КодПоОКЕИ = Стр.КодПоОКЕИ;
		Строка.Параметры.Примечание = Стр.Примечание;

		
		Стоимость = Стоимость + (Стр.Цена * Стр.Количество);
		ТабДок.Вывести(Строка);
		
		Если Стр.Наименование.Наименование = "Масло давальческое" тогда
			Если не ПоДокументам и ПустаяСтрока(Стр.Характеристика) тогда
				Сумма1 = Сумма1 + Стр.Количество;
			иначеЕсли ПоДокументам тогда
				Сумма1 = Сумма1 + Стр.Количество;
			КонецЕсли;
		иначе
			Если не ПоДокументам и ПустаяСтрока(Стр.Характеристика) тогда
				Сумма2 = Сумма2 + Стр.Количество;
			иначеЕсли ПоДокументам тогда
				Сумма2 = Сумма2 + Стр.Количество;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	//Подвал
	Подвал = Макет.ПолучитьОбласть("Подвал1");
	Подвал.Параметры.КоличествоИтог = Количество;
	Подвал.Параметры.СтоимостьИтог = Стоимость;
	
	ТабДок.Вывести(Подвал);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
	///////////////////////////////////////////////////////////////////////////////////
	Шапка = Макет.ПолучитьОбласть("Шапка2");
	
	Шапка.Параметры.СрокХранения = Данные.Получить(9);	
	ТабДок.Вывести(Шапка);
	Строка = Макет.ПолучитьОбласть("Строка2");
		
	ИтоговаяСтоимость = 0;
	//Заполнение 2-й таблицы по итогам передач и реализаций
	ОтформРеализации.Очистить();
	ТаблицаПередачиТоваров.Свернуть("Наименование, Примечание, КодПоОКЕИ, Характеристика, Код", "Количество");
	Для каждого Стр из ТаблицаПередачиТоваров Цикл
		НоваяСтрока = ОтформРеализации.Добавить();
		НоваяСтрока.КонтрольФормата = "2";
		НоваяСтрока.Наименование = Стр.Наименование;
		НоваяСтрока.Количество 	 = Стр.Количество;
		НоваяСтрока.Примечание   = Стр.Примечание;
		НоваяСтрока.КодПоОКЕИ 	 = Стр.КодПоОКЕИ;
		НоваяСтрока.Код          = Стр.Код;
		НоваяСтрока.МаркерГруппы = Лев(Стр.Наименование.Наименование,1); 
	КонецЦикла;
	КонечныйОстаток1 = 0;
	КонечныйОстаток2 = 0;
	Для каждого Стр из РасшифровкаРеализаций Цикл
		НоваяСтрока = ОтформРеализации.Добавить();
		НоваяСтрока.КонтрольФормата = "3";
		НоваяСтрока.Наименование = Стр.Наименование;
		НоваяСтрока.Количество 	 = Стр.Количество;
		НоваяСтрока.Примечание   = Стр.Примечание;
		НоваяСтрока.КодПоОКЕИ 	 = Стр.КодПоОКЕИ;
		НоваяСтрока.Код          = Стр.Код;
		НоваяСтрока.МаркерГруппы = Лев(Стр.Наименование.Наименование,1);
		Если Стр.Наименование.Наименование = "Масло давальческое" тогда
			КонечныйОстаток1 = КонечныйОстаток1 + Стр.Количество;
		иначе
			КонечныйОстаток2 = КонечныйОстаток2 + Стр.Количество;
		КонецЕсли;
	КонецЦикла; 
	////////////////////////////////////////////
	// выводим остатки за ПРОШЛЫЙ МЕСЯЦ для контроля
	////////////////////////////////////////////        
		НоваяСтрока = ОтформРеализации.Добавить();
		НоваяСтрока.КонтрольФормата = "1";
		НоваяСтрока.Наименование = "Масло Нач. Остаток ";
		НоваяСтрока.Количество 	 = Остатки1;
		КонтрольОстатков1 = Остатки1;
		НоваяСтрока.МаркерГруппы = "М";
	////////////////////////////////////////////

		НоваяСтрока = ОтформРеализации.Добавить();
		НоваяСтрока.КонтрольФормата = "1";
		НоваяСтрока.Наименование = "СОМ Нач. Остаток ";
		НоваяСтрока.Количество 	 = Остатки2;
		КонтрольОстатков2 = Остатки2;
		НоваяСтрока.МаркерГруппы = "С";
	////////////////////////////////////////////
	// выводим остатки за ЭТОТ МЕСЯЦ (если есть)
	////////////////////////////////////////////     
		НоваяСтрока = ОтформРеализации.Добавить();
		НоваяСтрока.КонтрольФормата = "4";
		НоваяСтрока.Наименование = "Масло Остаток от Нач.";
		НоваяСтрока.Количество 	 = Остатки1 - Сумма1;
		НоваяСтрока.Примечание   = (ДатаПо - ДатаС)/86400+1;
		НоваяСтрока.МаркерГруппы = "М";
		КонечныйОстаток1 = КонечныйОстаток1 + (Остатки1 - Сумма1);
	////////////////////////////////////////////
		НоваяСтрока = ОтформРеализации.Добавить();
		НоваяСтрока.КонтрольФормата = "4";
		НоваяСтрока.Наименование = "СОМ Остаток от Нач.";
		НоваяСтрока.Количество 	 = Остатки2 - Сумма2;
		НоваяСтрока.Примечание   = (ДатаПо - ДатаС)/86400+1;
		НоваяСтрока.МаркерГруппы = "С";
		КонечныйОстаток2 = КонечныйОстаток2 + (Остатки2 - Сумма2);
	////////////////////////////////////////////
	// выводим КОНЕЧНЫЙ ОСТАТОК
	////////////////////////////////////////////    
		НоваяСтрока = ОтформРеализации.Добавить();
		НоваяСтрока.КонтрольФормата = "5";
		НоваяСтрока.Наименование = "Масло Кон. остаток";
		НоваяСтрока.Количество 	 = КонечныйОстаток1;
		НоваяСтрока.МаркерГруппы = "М";
		КонечныйОстаток1 = КонечныйОстаток1 + (Остатки1 - Сумма1);
	////////////////////////////////////////////
		НоваяСтрока = ОтформРеализации.Добавить();
		НоваяСтрока.КонтрольФормата = "5";
		НоваяСтрока.Наименование = "СОМ Кон. остаток";
		НоваяСтрока.Количество 	 = КонечныйОстаток2;
		НоваяСтрока.МаркерГруппы = "С";
		КонечныйОстаток2 = КонечныйОстаток2 + (Остатки2 - Сумма2);
		
	ОтформРеализации.Сортировать("МаркерГруппы возр ,КонтрольФормата возр, Примечание убыв");
	
	Для Каждого Стр Из ОтформРеализации Цикл
		Строка.Параметры.НомерСтр = Стр.НомерСтроки;
		Строка.Параметры.Наименование = Стр.Наименование;
		Строка.Параметры.Код = Стр.Код;
		Строка.Параметры.ЕдИзм = "тн";
		Строка.Параметры.Количество = Стр.Количество/1000;   
		Строка.Параметры.КодПоОКЕИ = Стр.КодПоОКЕИ;
		Строка.Параметры.Примечание = Стр.Примечание;
		Стоимость = Число(Стр.Примечание) * Стр.Количество/1000 * 50;
		Строка.Параметры.Стоимость = Стоимость;  
		ИтоговаяСтоимость = ИтоговаяСтоимость+Стоимость;
		ТабДок.Вывести(Строка);

	КонецЦикла;
		
	ИтоговаяСтоимость = Окр(ИтоговаяСтоимость);
	 //Подвал
	Подвал = Макет.ПолучитьОбласть("Подвал2");
	
	ИтогНДС = Окр(ИтоговаяСтоимость*18/118,2);
		
	Подвал.Параметры.СтоимостьИтог = ИтоговаяСтоимость-ИтогНДС;
	Подвал.Параметры.НДС = ИтогНДС;  
	Подвал.Параметры.СтоимостьИтогСНДС = ИтоговаяСтоимость;
	
	СтоимостьПрописью = ЧислоПрописью(Цел(ИтоговаяСтоимость));
	Подвал.Параметры.СтоимостьПрописью = Лев(СтоимостьПрописью,СтрДлина(СтоимостьПрописью)-4);
	Подвал.Параметры.СтоимостьКоп = Прав(Строка(Формат(ИтоговаяСтоимость,"ЧДЦ=2")),2);
	СтоимостьСНДСПрописью = ЧислоПрописью(Цел(ИтогНДС));            
	Подвал.Параметры.СтоимостьСНДСПрописью = Лев(СтоимостьСНДСПрописью,СтрДлина(СтоимостьСНДСПрописью)-4);
	Подвал.Параметры.СтоимостьНДСКоп = Прав(Строка(Формат(ИтогНДС,"ЧДЦ=2")),2);
		
	Подвал.Параметры.ПринялДолжность = Данные.Получить(4);
	Подвал.Параметры.ПринялРасшифровка = Данные.Получить(5);
	Подвал.Параметры.СдалДолжность = Данные.Получить(7);
	Подвал.Параметры.СдалРасшифровка = Данные.Получить(8);
	ТабДок.Вывести(Подвал);

	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
КонецПроцедуры

Процедуры и функции модуля формы обработки.
Листинг Б.1 Процедура обновления таблицы «ТаблицаРеализаций»
&НаСервере
Процедура ПросчетНаСервере(Контрагент,Договор,Организация,ПоДокументам)
	Запрос = новый Запрос;
	Запрос.УстановитьПараметр("ДатаС",ЭтаФорма.НачалоВыборки);//-10*86400);
	Запрос.УстановитьПараметр("ДатаПо",ЭтаФорма.КонецВыборки);//-10*86400);

	Запрос.УстановитьПараметр("ВидОперации",Перечисления.ВидыОперацийПередачаТоваров.ИзПереработки);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("Договор",Договор);
	Запрос.УстановитьПараметр("Организация",Организация);
	Если ПоДокументам Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	РеализацияУслугПоПереработке.Ссылка,
		|	РеализацияУслугПоПереработке.Контрагент,
		|	РеализацияУслугПоПереработке.Дата
		|ИЗ
		|	Документ.РеализацияУслугПоПереработке КАК РеализацияУслугПоПереработке
		|ГДЕ
		|	РеализацияУслугПоПереработке.Дата <= &ДатаС
		|	И РеализацияУслугПоПереработке.Дата >= &ДатаПо"+
		?(Контрагент <> Справочники.Контрагенты.ПустаяСсылка(),"	И РеализацияУслугПоПереработке.Контрагент = &Контрагент","")+
		?(Договор <> Справочники.ДоговорыКонтрагентов.ПустаяСсылка()," И РеализацияУслугПоПереработке.ДоговорКонтрагента = &Договор","")+
		?(Организация <> Справочники.Организации.ПустаяСсылка()," И РеализацияУслугПоПереработке.Организация = &Организация","")+
		" СГРУППИРОВАТЬ ПО
		|	РеализацияУслугПоПереработке.Ссылка,
		|	РеализацияУслугПоПереработке.Контрагент,
		|	РеализацияУслугПоПереработке.Дата
		|УПОРЯДОЧИТЬ ПО
		|	РеализацияУслугПоПереработке.Дата УБЫВ";
	иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ХозрасчетныйОстаткиИОбороты.Субконто1.Ссылка КАК Ссылка,
		               |	ХозрасчетныйОстаткиИОбороты.Субконто1.Контрагент КАК Контрагент,
		               |	ХозрасчетныйОстаткиИОбороты.Субконто1.Дата КАК Дата,
		               |	ХозрасчетныйОстаткиИОбороты.Субконто1.Номер,
		               |	ХозрасчетныйОстаткиИОбороты.Субконто1.Представление
		               |ИЗ
		               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаПо, &ДатаС, Запись, ,Счет = &Счет, , ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Документ.Партия) ) КАК ХозрасчетныйОстаткиИОбороты
		               |ГДЕ
		               |	ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт > 0"+
		?(Контрагент <> Справочники.Контрагенты.ПустаяСсылка()," И ХозрасчетныйОстаткиИОбороты.Субконто1.Контрагент = &Контрагент","")+
		?(Договор <> Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),"	И ХозрасчетныйОстаткиИОбороты.Субконто1.ДоговорКонтрагента = &Договор","")+
		?(Организация <> Справочники.Организации.ПустаяСсылка(),"	И ХозрасчетныйОстаткиИОбороты.Субконто1.Организация = &Организация","")+
		" УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.ТоварыНаСкладе);	
	КонецЕсли;
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Объект.ТаблицаРеализаций.Очистить();	
	Для каждого Стр из Выгрузка Цикл
		НоваяСтрока = Объект.ТаблицаРеализаций.Добавить();
		НоваяСтрока["Контрагент"] = Стр.Контрагент;
		НоваяСтрока["Обьект"] = Стр.Ссылка;
		НоваяСтрока["ДатаРеализации"] = Стр.Дата;  
		НоваяСтрока["ДнейПросрочено"] = (Число(((КонецДня(ЭтаФорма.НачалоВыборки)+1)-11*86400)-НачалоДня(Стр.Дата))/60/60/24);	
	КонецЦикла;
КонецПроцедуры

